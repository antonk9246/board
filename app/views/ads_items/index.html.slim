- if policy(@ads_item).create?
  .row
    .col-sm-12.offset-sm-0.col-md-6.offset-md-3
      = form_for @ads_item, url: {action: :create}, html: { multipart: true } do |f|
        - if @ads_item.errors.any?
          #error_explanation
            p.lead
              = pluralize(@ads_item.errors.count, "error")
              | prohibited
              | this post from being saved:
            ul.list-unstyled
              - @ads_item.errors.full_messages.each do |msg|
                li= msg
        .card.card-outline-secondary
          .card-block
            h1= "# t('new_ad') "
            .form-group
              = t 'title'
              br/
              = f.text_field :title, :class => 'form-control', :placeholder => "#{t 'enter_title'}"
            .form-group
              .field
                = t 'images'
                = f.file_field :images, multiple: true, accept: "image/jpeg, image/jpg, image/gif, image/png"
            .form-group
              = t 'text'
              br/
              = f.text_area :text, :class => 'form-control'
            button.btn.btn-primary type="f.submit" = t 'buttons.submit'
.row
  .col-sm-12.offset-sm-0.col-md-6.offset-md-3
    h1= "# t('ads_board') "
    nav aria-label=("Page navigation example") 
      = paginate @ads_items
    ul.nav.nav-pills
      .btn-group role="group" 
        a#navbarDropdownMenuLink.nav-link.dropdown-toggle aria-expanded="false" aria-haspopup="true" data-toggle="dropdown" href="http://example.com" 
          = t 'sort_by'
        .dropdown-menu aria-labelledby="btnGroupDrop1" 
          li= link_to "# t 'sort.date' ", url_for( :sort => 'date', :direction => 'asc'),  autocomplete: "off", type: "checkbox"
          li= link_to "# t 'sort.author' ", url_for( :sort => 'author', :direction => 'asc'), autocomplete: "off", type: "checkbox"
      = link_to "▲", url_for( :sort => params[:sort], :direction => 'asc'), type: "link", class: "nav-link"
      = link_to "▼", url_for( :sort => params[:sort], :direction => 'desc'), type: "link", class: "nav-link"
      h5
        = I18n.t('sorted_by')
        = I18n.t"#{params[:sort]}"
    - @ads_items.each do |item|
      - if item.approved != true
        .card.card-outline-primary
          - else
            .card.card-outline-secondary
              .card-block
                = link_to(item) do
                  - if item.images.empty?
                    img.card-img-top.img-fluid alt=("Card image") src="http://zametki.by/wp-content/themes/easymag/images/no-image.png" /
                  - else
                    = image_tag(item.images.first.url.to_s, class: "card-img-top img-fluid mx-auto d-block", alt: "Card image")
                h4.card-title
                  = link_to(item) do
                    = item.title
                p.card-text= item.text
                .btn-group aria-label=("Basic example") role="group" 
                  - if policy(item).set_approve? && item.approved != true
                    = link_to "#{t('approve')}", ads_item_set_approve_url(item), method: :patch, :class => "btn btn-success"
                  = link_to "#{t('buttons.show')}", ads_item_url(item), :class => "btn btn-primary"
                  - if policy(item).update?
                    = link_to "#{t('buttons.edit')}", edit_ads_item_url(item), :class => "btn btn-primary"
                  - if policy(item).destroy?
                    = link_to "#{t('buttons.delete')}", ads_item_url(item), method: :delete, data: { confirm: "#{t('are_you_sure')}" }, :class => "btn btn-danger"
              .card-footer
                - if item.approved == true
                  small.text-muted
                    | published by #{item.user.email}
                  small.text-muted
                    | at  #{item.approval_date.strftime("%d.%m.%Y %H:%M")}
                - else
                  small.text-muted
                    | send by #{item.user.email}
                  small.text-muted
                    | at  #{item.updated_at.strftime("%d.%m.%Y %H:%M")}
          nav aria-label=("Page navigation example") 
            = paginate @ads_items
 